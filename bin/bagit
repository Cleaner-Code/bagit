#!/usr/bin/env ruby

require 'bagit'
require 'docopt'

doc = <<DOCOPT
BagIt.

Usage: 
  #{__FILE__} bag PATH [-f <file>...] [-t <tagfile>...]
  #{__FILE__} validate [-o | --oxum] PATH 
  #{__FILE__} list [--tags | --all] PATH 
  #{__FILE__} -h | --version

Options:
  -h --help      Show this help screen.
  --version      Show version.
  -f <file>      File to add to bag. Repeatable.
  -t <tag_file>  Tag (metadata) file to add to bag. Repeatable.
  -o --oxum      Validate against oxum only (quick validate).
  --tags         List tag files.
  --all          List all data and tag files.

DOCOPT

begin
  opts = Docopt::docopt(doc, version: 'BagIt 0.3.0')
  
  bag = BagIt::Bag.new(opts['PATH'])


  if opts['validate']
    if opts['--oxum']
      puts bag.valid_oxum?.to_s
    else
      puts bag.valid?.to_s
    end
    # validation commands MUST NOT change manifest or bag-info files
    exit
  end

  if opts['list']
    files = bag.bag_files
    if opts['--tags']
      files = bag.tag_files
    elsif opts['--all']
      files = bag.bag_files + bag.tag_files
    end
    files.each { |f| puts f }
    # quit here, too
    exit
  end

  unless opts['-f'].nil? 
    opts['-f'].each { |datafile|
      bag.add_file(File.basename(datafile), datafile) if File.exist?(datafile)
    }  
  end
    
  unless opts['-t'].nil? 
    opts['-t'].each { |tagfile|
      puts tagfile
      #    bag.add_tag_file(opts['-t'])
      #    bag.tagmanifest!
    }
  end

  bag.manifest!

rescue Docopt::Exit => e
  puts e.message
end

